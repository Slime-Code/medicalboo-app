{"version":3,"file":"css/238.css","mappings":";AA4KA;EACE,yBAAyB;AAC3B;AACA;EACE,WAAW;AACb;AACA;EACE,gBAAgB;EAChB,mBAAmB;EACnB,YAAY;AACd;AAEA;EACE,eAAe;EACf,mBAAmB;AACrB;AAEA;EACE,iBAAiB;EACjB,SAAS;EACT,UAAU;AACZ;AAEA;EACE,aAAa;EACb,gBAAgB;AAClB;AAEA;EACE,gBAAgB;AAClB;AAEA;EACE,aAAa;AACf","sources":["webpack://medicalbookapp/./src/pages/register/ThirdStepPage.vue"],"sourcesContent":["<template>\n  <div>\n    <q-header elevated>\n      <q-toolbar>\n        <q-btn to=\"/second\" flat round dense icon=\"arrow_back\" />\n        <q-toolbar-title class=\"text-center\"> Dados de acesso </q-toolbar-title>\n      </q-toolbar>\n    </q-header>\n    <q-page padding class=\"row justify-center q-gutter-sm\" :class=\"{'items-center': $q.screen.width > 599}\">\n      <div  :class=\"{'col-4': $q.screen.width > 599}\">\n        <p>\n          Aqui é onde você irá cadastrar a sua conte. É bem rápido. Para começar, informe\n          para a gente os seus dados pessoais\n        </p>\n        <q-form @submit=\"nextStep\">\n          <q-select\n            dense\n            rounded\n            outlined\n            :loading=\"loading\"\n            v-model=\"formData.occupation_area\"\n            :options=\"options\"\n            label=\"Área de actuação\"\n            class=\"q-mb-md\"\n            :rules=\"[val => !!val || 'Campo obrigatório']\"\n          />\n          <q-select\n            :loading=\"loading\"\n            dense\n            rounded\n            outlined\n            v-model=\"formData.graduation_year\"\n            :options=\"options1\"\n            label=\"Ano de formatura\"\n            :rules=\"[val => !!val || 'Campo obrigatório']\"\n          />\n          <div class=\"login-btn-area\">\n            <div class=\"row\">\n              <q-btn\n                label=\"próximo passo\"\n                rounded\n                color=\"primary\"\n                class=\"q-mb-md full-width\"\n                type=\"submit\"\n              />\n            </div>\n\n            <div class=\"row\">\n              <q-btn\n                label=\"cancelar\"\n                to=\"/\"\n                class=\"q-mb-md full-width\"\n                rounded\n                color=\"secondary\"\n              />\n            </div>\n          </div>\n        </q-form>\n      </div>\n    </q-page>\n    <div class=\"flex flex-top\">\n      <q-spinner class=\"absolute-center\" v-if=\"loading1\" size=\"xl\" color=\"primary\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  showErrorNotification,\n  // showSuccessNotification,\n} from 'src/functions/functionShowNotifications';\nimport {\n  defineComponent, reactive, ref, computed, onMounted,\n} from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { useQuasar } from 'quasar';\nimport useAuthUser from 'src/composebles/useAuthUser';\nimport useApi from '../../composebles/useApi';\nimport { message } from '../../composebles/messageAPI';\n// import user from '../../api/User';\n/* eslint-disable no-alert */\n\nexport default defineComponent({\n  name: 'ThirdStepPage',\n\n  setup() {\n    const { register } = useAuthUser();\n\n    const loading = ref(true);\n\n    const loading1 = ref(false);\n\n    const { list } = useApi();\n\n    const { post } = useApi();\n\n    const store = useStore();\n\n    const router = useRouter();\n\n    const teste = computed(() => store.getters['user/getData']);\n\n    const formData = reactive({\n      occupation_area: '',\n      graduation_year: '',\n    });\n\n    const options = ref([]);\n    const options1 = ref([]);\n\n    const listTopicsAproachs = async () => {\n      try {\n        loading.value = true;\n        const aux1 = await list('occupation_area');\n        options.value = aux1.map((elem) => elem.occupation_area);\n        const aux = await list('graduation_year');\n\n        for (let index = 1922; index <= new Date().getFullYear(); index++) {\n          options1.value.push(index);\n        }\n\n        loading.value = false;\n      } catch (error) {\n        showErrorNotification(\n          `houve uma falha ao carregar os dados do banco: ${JSON.stringify(error)}`,\n        );\n      }\n    };\n    onMounted(() => {\n      listTopicsAproachs();\n    });\n\n    const $q = useQuasar();\n    const nextStep = async () => {\n      try {\n        loading1.value = true;\n        store.commit('user/setFormThird', formData);\n        const form = { ...store.state.user.formData };\n        const user = await register(form);\n        // delete form.email;\n        // delete form.password;\n        form.user_id = user.id;\n        await post('perfil', form);\n        router.replace({ name: 'concluido' });\n        loading1.value = false;\n      } catch (error) {\n        loading1.value = false;\n        showErrorNotification(message(error.message));\n      }\n    };\n\n    onMounted(() => {\n      if (!teste.value.email.length) {\n        router.push('/register');\n      }\n    });\n\n    return {\n      loading,\n      loading1,\n      formData,\n      options,\n      options1,\n      nextStep,\n      teste,\n    };\n  },\n});\n</script>\n\n<style scoped>\n.q-header {\n  background-color: #0053ab;\n}\n.explore {\n  width: 80vw;\n}\n.login-content {\n  margin-top: 40px;\n  margin-bottom: auto;\n  height: 100%;\n}\n\n.login-cab {\n  padding: 0 10px;\n  margin-bottom: 30px;\n}\n\n.login-title {\n  font-weight: bold;\n  margin: 0;\n  padding: 0;\n}\n\n.login-text-area .q-field {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.login-btn-area {\n  margin-top: 40px;\n}\n\n.login-content .q-btn {\n  margin: 5px 0;\n}\n</style>\n"],"names":[],"sourceRoot":""}